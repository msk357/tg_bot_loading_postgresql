name: Tg-bot workflow
# workflow запускается после пуша в ветку
on: [push]

jobs:
  tests:
    # «Раннер» — создание изолированного окружения с версией Ubuntu 20.04
    # на других версия может возникать ошибка в установке Python 3.9.6
    runs-on: ubuntu-20.04

    steps:
    # Запуск actions checkout — готовый скрипт
    # для клонирования репозитория
    - uses: actions/checkout@v2
    - name: Set up Python
      # Запуск actions setup-python — готовый скрипт
      # для развертывания окружения Python
      uses: actions/setup-python@v2
      with:
        # Выбор версии Python
        python-version: 3.9.6

    - name: Install dependencies
      run: | 
        # обновление pip
        python -m pip install --upgrade pip 
        # установка flake8
        pip install flake8
        # установка зависимостей
        pip install -r requirements.txt 

   # - name: Test with flake8
    #  run: |
        # запуск проверки по flake8
     #   python -m flake8
        # запуск тестов pytest
      #  pytest tests/test*
    
  # Сборка образа Docker и обновление репозитория на Docker Hub
  build_and_push_to_docker_hub:
    name: Push image to Docker Hub
    runs-on: ubuntu-20.04
    needs: tests
    steps:
      - name: Check repo Docker
        # проверяем доступность Docker Hub
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        # Вызов сборщика контейнеров docker
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        # Запуск скрипта авторизации на Docker Hub
        uses: docker/login-action@v1
        with:
          # Авторизация в docker hub
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        # Пуш образа в Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: mmsk357/tg-bot:latest

  # Обновление образа в Docker Hub на сервере и запуск бота
  deploy:
    name: deploy bot in server
    runs-on: ubuntu-20.04
    # Подключение к серверу через ssh
    needs: build_and_push_to_docker_hub
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
              # Переходим в директорию
              cd tg_bot
              # Выполняем pull образа с DockerHub
              sudo docker pull mmsk357/tg-bot
              #остановка всех контейнеров
              sudo docker stop $(sudo docker ps -a -q)
              # Файл .env сохранен на сервере, команда копирует данные в docker образ и запускает его
              sudo docker run -v /home/msk357/.env:/tg_bot_loading_postgresql_docker/infra_project/.env --rm -d mmsk357/tg-bot
